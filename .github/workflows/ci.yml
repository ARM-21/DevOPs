name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Send build start notification
      run: |
        curl -X POST "${{ secrets.CI_KEY }}" \
        -H "Content-Type: application/json" \
        -d '{
          "text": "üöÄ *CI Pipeline Started*\nBuilding commit: `${{ github.sha }}`, Branch: `${{ github.ref_name }}`"
        }'
    
    - name: Run build
      run: npm run build
    
    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@v2
      env:
      # Automatically provided by GitHub
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}
        SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
    
    - name: Start application in background
      run: npm start &
      
    - name: Wait for application to start
      run: sleep 5
    
    - name: Run tests
      run: npm test
    
    - name: Send success notification
      if: success()
      run: |
        curl -X POST "${{ secrets.CI_KEY }}" \
        -H "Content-Type: application/json" \
        -d '{
          "text": "‚úÖ *CI Pipeline Completed Successfully!*\nAll tests passed ‚úÖ\nSonarCloud scan completed ‚úÖ\nCommit: `${{ github.sha }}`"
        }'
    
    # - name: Send failure notification
    #   if: failure()
    #   run: |
    #     curl -X POST "${{ secrets.CI_KEY }}" \
    #     -H "Content-Type: application/json" \
    #     -d '{
    #       "text": "‚ùå *CI Pipeline Failed*\nBuild failed for commit: `${{ github.sha }}`, Branch: `${{ github.ref_name }}`"
    #     }'
    
  